{"version":3,"sources":["components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/MyPosts/Myposts.module.css","components/profile/MyPosts/Post/Post.module.css","components/profile/MyPosts/Post/Post.js","components/profile/MyPosts/Myposts.js","components/profile/MyPosts/MypostsContainer.js","components/profile/ProfileInfo/ProfileStatus.js","components/profile/ProfileInfo/ProfileStatusWithHooks.js","components/profile/ProfileInfo/ProfileInfo.js","components/profile/profile.js","components/profile/profileContainer.js"],"names":["module","exports","Post","props","className","classes","item","src","avatar","message","like","maxLength30","maxLengthCreator","minLength5","minLengthCreator","MyPosts","nextProps","nextState","this","state","postElements","postData","map","post","postsBlock","AddPostReduxForm","onSubmit","values","addPost","newPostText","posts","React","Component","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MypostsContainer","connect","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","descr","photos","large","fullName","Profile","ProfileContainer","userId","match","params","logginedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.cd3663c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__3zZ--\",\"descr\":\"ProfileInfo_descr__2K9Fi\",\"name\":\"ProfileInfo_name__2TR1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__1EfYp\",\"posts\":\"Myposts_posts__K8tWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__PxbiF\",\"avatar\":\"Post_avatar__3O4in\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      <div className={classes.item}>\r\n        <img src='https://i.ytimg.com/vi/Y5GLCBjHR8U/maxresdefault.jpg' className={classes.avatar}/>\r\n        {props.message}\r\n        <div>\r\n          <span>{props.like} likes </span>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/formControls/formsControls';\r\nimport classes from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst minLength5 = minLengthCreator(5);\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea}  name={\"newPostText\"} validate={[required, maxLength30, minLength5]}/>\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n\r\nclass MyPosts extends React.Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps !=this.props || nextState !=this.state;\r\n  }\r\n\r\n  render() {\r\n  let postElements = this.props.postData.map(post => <Post message={post.message} like={post.like}/>)\r\n   \r\n  const onAddPost = (values) => {\r\n    this.props.addPost(values.newPostText);\r\n  };\r\n    \r\n      return (\r\n          <div className={classes.postsBlock}>\r\n            <h3>My post</h3>\r\n              <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n              {\r\n                postElements\r\n              }\r\n            </div>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm ({form: 'addPost'}) (MyPostsForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer.';\r\nimport MyPosts from './Myposts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      postData: state.profilePage.postData,\r\n      newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      addPost: (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText));\r\n      }\r\n  }\r\n}\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MypostsContainer;\r\n\r\n","import React, { Component } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    \r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        });\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState( {\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);  \r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        }) \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }  \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode && \r\n                    <div>\r\n                        <span onDoubleClick= {this.activateEditMode}>{this.props.status || 'no status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status); \r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value); \r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick= {activateEditMode}>{props.status || 'no status'}</span>\r\n                </div> \r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} value={status} onBlur={deActivateEditMode} autoFocus={true} />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport { updateStatus } from '../../../redux/profileReducer.';\r\nimport Preloader from '../../common/preloader';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.js';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className={classes.descr}>\r\n          <img src={profile.photos.large} />\r\n          <div className={classes.name}>{profile.fullName}</div>\r\n          <ProfileStatusWithHooks status={status} updateStatus ={updateStatus}/>\r\n{/*           <div className={classes.socials}>\r\n            <div><a href={props.profile.contacts.vk}>{props.profile.contacts.vk}</a></div>\r\n            <div>{props.profile.contacts.instagram}</div>\r\n            <div>{props.profile.contacts.twitter}</div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MypostsContainer from './MyPosts/MypostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n      <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MypostsContainer/>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer.';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n        userId = this.props.logginedUserId;\r\n        if (!userId) {\r\n          this.props.history.push('/login');\r\n        }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} state={this.props.status} updateStatus={this.props.updateStatus}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  logginedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}) ,\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}