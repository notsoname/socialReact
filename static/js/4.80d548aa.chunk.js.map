{"version":3,"sources":["components/profile/Dialogs/dialogs.module.css","components/profile/Dialogs/Dialogs.js","components/profile/Dialogs/dialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","maxLength30","maxLengthCreator","minLength5","minLengthCreator","DialogReduxFrom","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","state","messagesPage","dialogsElements","dialogsData","map","messagesElements","messagesData","isAuth","dialogs","dialogsItems","messages","values","sendMessage","newMessageText","compose","connect","dispatch","addMesssageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,uB,oICM5OC,EAAa,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UAKhCC,EAAU,SAACT,GACb,OACA,qBAAKG,UAAWC,IAAQM,QAAxB,SAAkCV,EAAMU,WAGtCC,EAAcC,YAAiB,IAC/BC,EAAaC,YAAiB,GAwC9BC,EAAkBC,YAAU,CAACC,KAAM,WAAjBD,EAvCJ,SAAChB,GACjB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAASX,EAAYF,GAAcH,KAAM,qBAEpF,8BAAK,iDAmCFiB,EA9BC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,aAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAzB,GAAM,OAAI,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,QAC5F6B,EAAmBL,EAAMM,aAAaF,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAAWA,EAAQA,aAOrF,OAAKV,EAAMiC,OAGP,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACI,qBAAK/B,UAAWC,IAAQ+B,aAAxB,SAEQP,IAGR,qBAAKzB,UAAWC,IAAQgC,SAAxB,SACI,8BAAML,MAEV,cAAChB,EAAD,CAAiBG,SAhBL,SAACmB,GACjBrC,EAAMsC,YAAYD,EAAOE,sBAGH,cAAC,IAAD,CAAUhC,GAAI,Y,uBCD7BiC,sBACXC,aAlBkB,SAACf,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACe,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SASSK,IADlCJ,CAEbf","file":"static/js/4.80d548aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__1Pphq\",\"dialog\":\"dialogs_dialog__PmnpP\",\"dialogsItems\":\"dialogs_dialogsItems__2Rvgp\",\"active\":\"dialogs_active__3nLW7\",\"messages\":\"dialogs_messages__tL03m\",\"message\":\"dialogs_message__3gb_d\",\"btn\":\"dialogs_btn__gl4yh\"};","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/formControls/formsControls';\r\nimport classes from './dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink> \r\n        </div>\r\n    );\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={classes.message}>{props.message}</div>\r\n    );\r\n}\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst minLength5 = minLengthCreator(5);\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>            \r\n            <div>\r\n                <Field component={Textarea} validate={[required,minLength5, maxLength30]} name={\"newMessageText\"}></Field>\r\n            </div>\r\n            <div><button>btn</button></div>\r\n         </form>\r\n    );\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = state.messagesData.map(message => <Message message = {message.message}/>)\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}></Redirect>\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {\r\n                    dialogsElements\r\n                }\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <DialogReduxFrom onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogReduxFrom = reduxForm({form: 'message'})(DialogsForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { addMesssageCreator } from '../../../redux/messageReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n/* const DialogsContainer = () => {\r\n\r\n    return <StoreContext.Consumer> \r\n        {store => {\r\n            let state = store.getState().messagesPage;\r\n\r\n            let onAddMessageClick = () => {\r\n                store.dispatch(addMesssageCreator());\r\n            }\r\n            let onNewMessageChange = (text) => {\r\n                store.dispatch(updateNewMessageTextCreator(text))\r\n            }\r\n            return <Dialogs updateNewMessageText={onNewMessageChange} \r\n            sendMessage={onAddMessageClick} \r\n            messagesPage={state}/>\r\n        }\r\n\r\n    }\r\n    </StoreContext.Consumer>\r\n} */\r\n\r\nlet mapStatetoProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(addMesssageCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps, mapDispatchToProps),withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}